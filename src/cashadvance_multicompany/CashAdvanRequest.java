/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package cashadvance_multicompany;

import static cashadvance_multicompany.frmLogin.LoginCompanyName;
import static cashadvance_multicompany.frmLogin.LoginCono;
import static cashadvance_multicompany.frmLogin.LoginDivision;
import static cashadvance_multicompany.frmLogin.LoginUsername;
import static cashadvance_multicompany.frmLogin.Table_fin_caadd;
import java.awt.FlowLayout;
import java.awt.Toolkit;
import java.math.BigDecimal;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import java.util.concurrent.TimeUnit;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JComboBox;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.SwingUtilities;
import javax.swing.table.DefaultTableModel;
import org.jdesktop.swingx.JXDatePicker;
import org.jdesktop.swingx.autocomplete.AutoCompleteDecorator;

/**
 *
 * @author Jilasak
 */
public class CashAdvanRequest extends javax.swing.JFrame {

    public static String CashAdvanceRequestNo = "";
    DefaultTableModel model;
    private JComboBox countryCombo;
    public static int Days = 1;
    public static boolean modeforreceive = false;
//    public boolean checkfortransfer = false;
    public static boolean importduty = false;

    /**
     * Creates new form CashAdvanRequest_tst
     */
    public CashAdvanRequest() {
        initComponents();
        rdoReturnKBANK.setVisible(false);
        this.setTitle("Cash Advance Request For : " + LoginCompanyName);
        Classgetdata getdataDatabase = new Classgetdata();
        model = (DefaultTableModel) griddetail.getModel();
        this.validate();
        SetNewCashAdvanRequester();
        if (!CashAdvanceRequestNo.equals("")) {
            SetFormDataWithSTEP1_Cash(CashAdvanceRequestNo);

            Classgetdata cgd = new Classgetdata();
            String CASH_STAT = cgd.GetDataCashAdvanStatus_WithCashNo(CashAdvanceRequestNo);

            if (CASH_STAT.equals("10")) {
                Set_ActiveStep1(true);
                Set_ActiveStep2(false);
                SetFormDataWithSTEP1_Cash(CashAdvanceRequestNo);
            } else if (CASH_STAT.equals("40")) {
                Set_ActiveStep1(false);
                Set_ActiveStep2(true);
                SetFormDataWithSTEP1_Cash(CashAdvanceRequestNo);
                SetFormDataWithSTEP2_Cash(CashAdvanceRequestNo);
            } else {
                Set_ActiveStep1(false);
                Set_ActiveStep2(false);
            }
        } else {
            Set_ActiveStep1(true);
            Set_ActiveStep2(false);
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        buttonGroup3 = new javax.swing.ButtonGroup();
        lblCompanyName = new java.awt.Label();
        label17 = new java.awt.Label();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        DateSettlement = new org.jdesktop.swingx.JXDatePicker();
        txtReccorder = new java.awt.TextField();
        DateReceive = new org.jdesktop.swingx.JXDatePicker();
        txtPONO = new java.awt.TextField();
        btnCancel = new javax.swing.JButton();
        btnSave = new javax.swing.JButton();
        jLabel21 = new javax.swing.JLabel();
        txtAdvanceNo = new java.awt.TextField();
        jLabel22 = new javax.swing.JLabel();
        txtDateAdvance = new java.awt.TextField();
        radiocancel = new javax.swing.JRadioButton();
        radionormal = new javax.swing.JRadioButton();
        radiosubmit = new javax.swing.JRadioButton();
        txtsearchStaffcode = new javax.swing.JButton();
        cmbstaffcode = new javax.swing.JTextField();
        jLabel31 = new javax.swing.JLabel();
        jLabel32 = new javax.swing.JLabel();
        jLabel34 = new javax.swing.JLabel();
        jLabel35 = new javax.swing.JLabel();
        jLabel36 = new javax.swing.JLabel();
        jLabel37 = new javax.swing.JLabel();
        cmbSupplierADV = new javax.swing.JTextField();
        txtsearchSupplier1 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        radiotaxchec = new javax.swing.JRadioButton();
        radiofrontwork = new javax.swing.JRadioButton();
        txtsearchEXP = new javax.swing.JButton();
        cmb_IT1GP = new javax.swing.JTextField();
        txtsearchCC = new javax.swing.JButton();
        cmbcostcenter = new javax.swing.JTextField();
        DateOperationTo = new org.jdesktop.swingx.JXDatePicker();
        DateOperationFrom = new org.jdesktop.swingx.JXDatePicker();
        txtpurpose_3 = new javax.swing.JTextField();
        txtpurpose_1 = new javax.swing.JTextField();
        txtpurpose_2 = new javax.swing.JTextField();
        txtamount = new javax.swing.JTextField();
        txtaccno = new javax.swing.JTextField();
        txtbranch = new javax.swing.JTextField();
        txtaccname = new javax.swing.JTextField();
        radionontax = new javax.swing.JRadioButton();
        jLabel33 = new javax.swing.JLabel();
        txtRefPo = new java.awt.TextField();
        jLabel38 = new javax.swing.JLabel();
        radio_cheque = new javax.swing.JRadioButton();
        radio_transfer = new javax.swing.JRadioButton();
        jPanel2 = new javax.swing.JPanel();
        jLabel12 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        cmbstaffcode1 = new javax.swing.JComboBox<>();
        txtAdvanceNo1 = new java.awt.TextField();
        txtDateAdvance1 = new java.awt.TextField();
        jLabel14 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        cmbcostcenter1 = new javax.swing.JComboBox<>();
        jLabel15 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        txtpurpose1_3 = new java.awt.TextField();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        griddetail = new javax.swing.JTable();
        txtpurpose1_1 = new java.awt.TextField();
        txtpurpose1_2 = new java.awt.TextField();
        DateSettlem = new org.jdesktop.swingx.JXDatePicker();
        radiosubmit1 = new javax.swing.JRadioButton();
        radionormal1 = new javax.swing.JRadioButton();
        DatePlanSettem = new org.jdesktop.swingx.JXDatePicker();
        DateReceive1 = new org.jdesktop.swingx.JXDatePicker();
        btncancel1 = new javax.swing.JButton();
        btnsave1 = new javax.swing.JButton();
        btnaddline = new javax.swing.JButton();
        jLabel39 = new javax.swing.JLabel();
        radiotaxchec_1 = new javax.swing.JRadioButton();
        jLabel8 = new javax.swing.JLabel();
        radiofrontwork_1 = new javax.swing.JRadioButton();
        jLabel23 = new javax.swing.JLabel();
        txtamtbfvat1 = new javax.swing.JTextField();
        jLabel24 = new javax.swing.JLabel();
        txtvat1 = new javax.swing.JTextField();
        txtamt1 = new javax.swing.JTextField();
        jLabel25 = new javax.swing.JLabel();
        jLabel26 = new javax.swing.JLabel();
        jLabel27 = new javax.swing.JLabel();
        txtreturn1 = new javax.swing.JTextField();
        txtwhtax1 = new javax.swing.JTextField();
        jLabel28 = new javax.swing.JLabel();
        txtrefund1 = new javax.swing.JTextField();
        rdoPTC = new javax.swing.JRadioButton();
        rdoTransBank = new javax.swing.JRadioButton();
        txtBName = new javax.swing.JTextField();
        rdoReturnSCB = new javax.swing.JRadioButton();
        rdoReturnKBANK = new javax.swing.JRadioButton();
        txtBCode = new javax.swing.JTextField();
        btnRefund = new javax.swing.JButton();
        jLabel29 = new javax.swing.JLabel();
        jLabel30 = new javax.swing.JLabel();
        txtamount1 = new javax.swing.JTextField();
        cmb_IT1GP_1 = new java.awt.TextField();
        radionontax_1 = new javax.swing.JRadioButton();
        btn_WHTAXStep1 = new javax.swing.JButton();
        DateTransfer = new org.jdesktop.swingx.JXDatePicker();
        jLabel40 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        lblCompanyName.setAlignment(java.awt.Label.CENTER);
        lblCompanyName.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        lblCompanyName.setText("Company Name");

        label17.setAlignment(java.awt.Label.CENTER);
        label17.setFont(new java.awt.Font("PMingLiU-ExtB", 1, 24)); // NOI18N
        label17.setForeground(new java.awt.Color(204, 0, 0));
        label17.setText("Cash Advance For Requester");

        jTabbedPane1.setMaximumSize(new java.awt.Dimension(800, 800));
        jTabbedPane1.setMinimumSize(new java.awt.Dimension(800, 800));
        jTabbedPane1.setPreferredSize(new java.awt.Dimension(800, 800));

        jPanel1.setOpaque(false);
        jPanel1.setLayout(null);

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("To");
        jPanel1.add(jLabel2);
        jLabel2.setBounds(270, 150, 30, 20);

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel3.setText("Staff Code");
        jPanel1.add(jLabel3);
        jLabel3.setBounds(10, 20, 89, 30);

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel4.setText("Cost Center");
        jPanel1.add(jLabel4);
        jLabel4.setBounds(10, 69, 89, 17);

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel5.setText("Reccorder");
        jPanel1.add(jLabel5);
        jLabel5.setBounds(10, 530, 90, 30);

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel6.setText("Operation Date");
        jPanel1.add(jLabel6);
        jLabel6.setBounds(10, 150, 110, 17);

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel7.setText("Purpose");
        jPanel1.add(jLabel7);
        jLabel7.setBounds(10, 190, 100, 17);

        jLabel9.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel9.setText("Received  Date");
        jPanel1.add(jLabel9);
        jLabel9.setBounds(580, 99, 110, 30);

        jLabel10.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel10.setText("Settlement Date");
        jPanel1.add(jLabel10);
        jLabel10.setBounds(580, 139, 110, 30);

        jLabel11.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel11.setText("Ref. PO No.");
        jPanel1.add(jLabel11);
        jLabel11.setBounds(280, 480, 80, 30);

        DateSettlement.setEditable(false);
        jPanel1.add(DateSettlement);
        DateSettlement.setBounds(690, 139, 170, 30);

        txtReccorder.setEditable(false);
        jPanel1.add(txtReccorder);
        txtReccorder.setBounds(120, 520, 260, 30);

        DateReceive.setEditable(false);
        jPanel1.add(DateReceive);
        DateReceive.setBounds(690, 99, 170, 30);
        jPanel1.add(txtPONO);
        txtPONO.setBounds(360, 480, 150, 30);

        btnCancel.setText("Cancel");
        btnCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelActionPerformed(evt);
            }
        });
        jPanel1.add(btnCancel);
        btnCancel.setBounds(250, 560, 130, 40);

        btnSave.setText("Save");
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });
        jPanel1.add(btnSave);
        btnSave.setBounds(120, 560, 130, 40);

        jLabel21.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel21.setText("Advance No.");
        jPanel1.add(jLabel21);
        jLabel21.setBounds(590, 20, 78, 20);
        jPanel1.add(txtAdvanceNo);
        txtAdvanceNo.setBounds(690, 20, 160, 20);

        jLabel22.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel22.setText("Date");
        jPanel1.add(jLabel22);
        jLabel22.setBounds(590, 59, 90, 17);

        txtDateAdvance.setEditable(false);
        jPanel1.add(txtDateAdvance);
        txtDateAdvance.setBounds(690, 59, 160, 20);

        radiocancel.setText("Cancel");
        radiocancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radiocancelActionPerformed(evt);
            }
        });
        jPanel1.add(radiocancel);
        radiocancel.setBounds(880, 80, 80, 27);

        radionormal.setSelected(true);
        radionormal.setText("Normal");
        radionormal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radionormalActionPerformed(evt);
            }
        });
        jPanel1.add(radionormal);
        radionormal.setBounds(880, 21, 70, 27);

        radiosubmit.setText("Submit");
        radiosubmit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radiosubmitActionPerformed(evt);
            }
        });
        jPanel1.add(radiosubmit);
        radiosubmit.setBounds(880, 50, 70, 27);

        txtsearchStaffcode.setText("Search");
        txtsearchStaffcode.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtsearchStaffcodeActionPerformed(evt);
            }
        });
        jPanel1.add(txtsearchStaffcode);
        txtsearchStaffcode.setBounds(460, 20, 80, 30);

        cmbstaffcode.setEditable(false);
        cmbstaffcode.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbstaffcodeActionPerformed(evt);
            }
        });
        jPanel1.add(cmbstaffcode);
        cmbstaffcode.setBounds(120, 20, 330, 30);

        jLabel31.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel31.setText("Expenses Group");
        jPanel1.add(jLabel31);
        jLabel31.setBounds(10, 110, 100, 30);

        jLabel32.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel32.setText("Payment type ");
        jPanel1.add(jLabel32);
        jLabel32.setBounds(10, 330, 110, 30);

        jLabel34.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel34.setText("Payment to");
        jPanel1.add(jLabel34);
        jLabel34.setBounds(10, 360, 90, 30);

        jLabel35.setText("Branch ");
        jPanel1.add(jLabel35);
        jLabel35.setBounds(280, 440, 50, 30);

        jLabel36.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel36.setText("Account Name");
        jPanel1.add(jLabel36);
        jLabel36.setBounds(0, 400, 100, 30);

        jLabel37.setText("Account Number");
        jPanel1.add(jLabel37);
        jLabel37.setBounds(10, 440, 100, 30);

        cmbSupplierADV.setEditable(false);
        cmbSupplierADV.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbSupplierADVActionPerformed(evt);
            }
        });
        jPanel1.add(cmbSupplierADV);
        cmbSupplierADV.setBounds(120, 360, 340, 30);

        txtsearchSupplier1.setText("Search");
        txtsearchSupplier1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtsearchSupplier1ActionPerformed(evt);
            }
        });
        jPanel1.add(txtsearchSupplier1);
        txtsearchSupplier1.setBounds(470, 360, 80, 30);

        jLabel1.setText("ภาษี หัก ณ ที่จ่าย");
        jPanel1.add(jLabel1);
        jLabel1.setBounds(580, 199, 100, 30);

        radiotaxchec.setText(" หักหน้าเช็ค");
        radiotaxchec.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radiotaxchecActionPerformed(evt);
            }
        });
        jPanel1.add(radiotaxchec);
        radiotaxchec.setBounds(680, 230, 110, 30);

        radiofrontwork.setText(" หักหน้างาน");
        radiofrontwork.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radiofrontworkActionPerformed(evt);
            }
        });
        jPanel1.add(radiofrontwork);
        radiofrontwork.setBounds(680, 260, 110, 30);

        txtsearchEXP.setText("Search");
        txtsearchEXP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtsearchEXPActionPerformed(evt);
            }
        });
        jPanel1.add(txtsearchEXP);
        txtsearchEXP.setBounds(460, 110, 80, 30);

        cmb_IT1GP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmb_IT1GPActionPerformed(evt);
            }
        });
        jPanel1.add(cmb_IT1GP);
        cmb_IT1GP.setBounds(120, 110, 330, 30);

        txtsearchCC.setText("Search");
        txtsearchCC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtsearchCCActionPerformed(evt);
            }
        });
        jPanel1.add(txtsearchCC);
        txtsearchCC.setBounds(460, 69, 80, 30);
        jPanel1.add(cmbcostcenter);
        cmbcostcenter.setBounds(120, 69, 330, 30);

        DateOperationTo.setEditable(false);
        DateOperationTo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DateOperationToActionPerformed(evt);
            }
        });
        jPanel1.add(DateOperationTo);
        DateOperationTo.setBounds(300, 150, 150, 30);

        DateOperationFrom.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DateOperationFromActionPerformed(evt);
            }
        });
        DateOperationFrom.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                DateOperationFromPropertyChange(evt);
            }
        });
        jPanel1.add(DateOperationFrom);
        DateOperationFrom.setBounds(120, 150, 150, 30);
        jPanel1.add(txtpurpose_3);
        txtpurpose_3.setBounds(120, 250, 330, 30);
        jPanel1.add(txtpurpose_1);
        txtpurpose_1.setBounds(120, 190, 330, 30);
        jPanel1.add(txtpurpose_2);
        txtpurpose_2.setBounds(120, 220, 330, 30);
        jPanel1.add(txtamount);
        txtamount.setBounds(120, 290, 160, 30);

        txtaccno.setEditable(false);
        jPanel1.add(txtaccno);
        txtaccno.setBounds(120, 440, 160, 30);

        txtbranch.setEditable(false);
        jPanel1.add(txtbranch);
        txtbranch.setBounds(330, 440, 130, 30);
        jPanel1.add(txtaccname);
        txtaccname.setBounds(120, 400, 340, 30);

        radionontax.setSelected(true);
        radionontax.setText("ไม่หักภาษี ณ ที่จ่าย");
        radionontax.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radionontaxActionPerformed(evt);
            }
        });
        jPanel1.add(radionontax);
        radionontax.setBounds(680, 200, 130, 30);

        jLabel33.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel33.setText("Ref. Capex No.");
        jPanel1.add(jLabel33);
        jLabel33.setBounds(10, 480, 110, 30);
        jPanel1.add(txtRefPo);
        txtRefPo.setBounds(120, 480, 150, 30);

        jLabel38.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel38.setText("Advance Amount ");
        jPanel1.add(jLabel38);
        jLabel38.setBounds(10, 290, 110, 30);

        radio_cheque.setText("CHEQUE");
        radio_cheque.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radio_chequeActionPerformed(evt);
            }
        });
        jPanel1.add(radio_cheque);
        radio_cheque.setBounds(240, 330, 100, 27);

        radio_transfer.setSelected(true);
        radio_transfer.setText("TRANSFER");
        radio_transfer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radio_transferActionPerformed(evt);
            }
        });
        jPanel1.add(radio_transfer);
        radio_transfer.setBounds(130, 330, 100, 27);

        jTabbedPane1.addTab("Cash Advance Entry", jPanel1);

        jPanel2.setOpaque(false);
        jPanel2.setLayout(null);

        jLabel12.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel12.setText("Advance No.");
        jPanel2.add(jLabel12);
        jLabel12.setBounds(10, 30, 78, 17);

        jLabel16.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel16.setText("Staff Code");
        jPanel2.add(jLabel16);
        jLabel16.setBounds(280, 60, 82, 17);

        cmbstaffcode1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cmbstaffcode1.setEnabled(false);
        AutoCompleteDecorator.decorate(cmbstaffcode1);
        jPanel2.add(cmbstaffcode1);
        cmbstaffcode1.setBounds(350, 60, 360, 29);

        txtAdvanceNo1.setEditable(false);
        txtAdvanceNo1.setEnabled(false);
        jPanel2.add(txtAdvanceNo1);
        txtAdvanceNo1.setBounds(100, 30, 170, 20);

        txtDateAdvance1.setEditable(false);
        txtDateAdvance1.setEnabled(false);
        jPanel2.add(txtDateAdvance1);
        txtDateAdvance1.setBounds(350, 30, 110, 20);

        jLabel14.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel14.setText("Costcenter");
        jPanel2.add(jLabel14);
        jLabel14.setBounds(10, 60, 82, 17);

        jLabel13.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel13.setText("Date");
        jPanel2.add(jLabel13);
        jLabel13.setBounds(280, 30, 40, 17);

        cmbcostcenter1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cmbcostcenter1.setEnabled(false);
        AutoCompleteDecorator.decorate(cmbcostcenter1);
        jPanel2.add(cmbcostcenter1);
        cmbcostcenter1.setBounds(100, 60, 170, 29);

        jLabel15.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel15.setText("Transfer Date");
        jPanel2.add(jLabel15);
        jLabel15.setBounds(380, 330, 90, 30);

        jLabel17.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel17.setText("Purpose");
        jPanel2.add(jLabel17);
        jLabel17.setBounds(10, 120, 70, 17);

        txtpurpose1_3.setEditable(false);
        txtpurpose1_3.setEnabled(false);
        jPanel2.add(txtpurpose1_3);
        txtpurpose1_3.setBounds(100, 150, 360, 20);

        jLabel18.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel18.setText("Adv. Amount");
        jPanel2.add(jLabel18);
        jLabel18.setBounds(10, 180, 130, 17);

        jLabel19.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel19.setText("Received Date");
        jPanel2.add(jLabel19);
        jLabel19.setBounds(10, 90, 100, 20);

        jLabel20.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel20.setText("Plan Settem Date");
        jPanel2.add(jLabel20);
        jLabel20.setBounds(280, 90, 106, 20);

        griddetail.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Invoice", "Supplier", "Name", "Invoice Date", "Desc", "Cost", "Amt", "VatC", "Vat Amt", "Expense", "Total Amt", "ShareService", "Delete"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.Object.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Double.class, java.lang.Double.class, java.lang.Double.class, java.lang.Object.class, java.lang.Double.class, java.lang.String.class, java.lang.Boolean.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false, false, false, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        griddetail.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                griddetailMouseClicked(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                griddetailMouseReleased(evt);
            }
        });
        jScrollPane1.setViewportView(griddetail);
        if (griddetail.getColumnModel().getColumnCount() > 0) {
            griddetail.getColumnModel().getColumn(7).setMinWidth(50);
            griddetail.getColumnModel().getColumn(7).setMaxWidth(50);
            griddetail.getColumnModel().getColumn(12).setMinWidth(50);
            griddetail.getColumnModel().getColumn(12).setMaxWidth(50);
        }

        jPanel2.add(jScrollPane1);
        jScrollPane1.setBounds(20, 460, 1060, 110);

        txtpurpose1_1.setEditable(false);
        txtpurpose1_1.setEnabled(false);
        jPanel2.add(txtpurpose1_1);
        txtpurpose1_1.setBounds(100, 120, 360, 20);

        txtpurpose1_2.setEditable(false);
        txtpurpose1_2.setEnabled(false);
        jPanel2.add(txtpurpose1_2);
        txtpurpose1_2.setBounds(470, 120, 330, 20);
        jPanel2.add(DateSettlem);
        DateSettlem.setBounds(800, 10, 140, 29);

        radiosubmit1.setText("Submit");
        radiosubmit1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radiosubmit1ActionPerformed(evt);
            }
        });
        jPanel2.add(radiosubmit1);
        radiosubmit1.setBounds(950, 40, 93, 27);

        radionormal1.setText("Normal");
        radionormal1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radionormal1ActionPerformed(evt);
            }
        });
        jPanel2.add(radionormal1);
        radionormal1.setBounds(950, 10, 93, 27);

        DatePlanSettem.setEditable(false);
        DatePlanSettem.setEnabled(false);
        jPanel2.add(DatePlanSettem);
        DatePlanSettem.setBounds(390, 90, 160, 29);

        DateReceive1.setEditable(false);
        DateReceive1.setEnabled(false);
        jPanel2.add(DateReceive1);
        DateReceive1.setBounds(110, 90, 160, 29);

        btncancel1.setText("Cancel");
        jPanel2.add(btncancel1);
        btncancel1.setBounds(520, 580, 110, 40);

        btnsave1.setText("Save");
        btnsave1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnsave1ActionPerformed(evt);
            }
        });
        jPanel2.add(btnsave1);
        btnsave1.setBounds(400, 580, 110, 40);

        btnaddline.setBackground(new java.awt.Color(204, 255, 204));
        btnaddline.setText("Add Line");
        btnaddline.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnaddlineActionPerformed(evt);
            }
        });
        jPanel2.add(btnaddline);
        btnaddline.setBounds(940, 430, 130, 30);

        jLabel39.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel39.setText("Expenses Group");
        jPanel2.add(jLabel39);
        jLabel39.setBounds(320, 180, 110, 20);

        radiotaxchec_1.setForeground(new java.awt.Color(255, 0, 51));
        radiotaxchec_1.setText(" หักหน้าเช็ค");
        radiotaxchec_1.setEnabled(false);
        jPanel2.add(radiotaxchec_1);
        radiotaxchec_1.setBounds(950, 110, 107, 30);

        jLabel8.setText("ภาษี หัก ณ ที่จ่าย");
        jPanel2.add(jLabel8);
        jLabel8.setBounds(850, 80, 100, 30);

        radiofrontwork_1.setForeground(new java.awt.Color(255, 0, 0));
        radiofrontwork_1.setText(" หักหน้างาน");
        radiofrontwork_1.setEnabled(false);
        jPanel2.add(radiofrontwork_1);
        radiofrontwork_1.setBounds(950, 140, 106, 30);

        jLabel23.setText("จำนวนเงินก่อน Vat7%");
        jPanel2.add(jLabel23);
        jLabel23.setBounds(10, 210, 130, 20);

        txtamtbfvat1.setEditable(false);
        txtamtbfvat1.setBackground(new java.awt.Color(255, 255, 204));
        txtamtbfvat1.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txtamtbfvat1.setText("0.00");
        jPanel2.add(txtamtbfvat1);
        txtamtbfvat1.setBounds(180, 210, 120, 29);

        jLabel24.setText("Vta 7%");
        jPanel2.add(jLabel24);
        jLabel24.setBounds(10, 240, 130, 20);

        txtvat1.setEditable(false);
        txtvat1.setBackground(new java.awt.Color(255, 255, 204));
        txtvat1.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txtvat1.setText("0.00");
        jPanel2.add(txtvat1);
        txtvat1.setBounds(180, 240, 120, 29);

        txtamt1.setEditable(false);
        txtamt1.setBackground(new java.awt.Color(255, 255, 204));
        txtamt1.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txtamt1.setText("0.00");
        jPanel2.add(txtamt1);
        txtamt1.setBounds(180, 270, 120, 29);

        jLabel25.setText("Total Amount");
        jPanel2.add(jLabel25);
        jLabel25.setBounds(10, 270, 130, 20);

        jLabel26.setText("Return to company");
        jPanel2.add(jLabel26);
        jLabel26.setBounds(10, 330, 130, 30);

        jLabel27.setFont(new java.awt.Font("sansserif", 1, 12)); // NOI18N
        jLabel27.setForeground(new java.awt.Color(255, 51, 51));
        jLabel27.setText("W/H สำหรับหัก หน้างาน เท่านั้น");
        jPanel2.add(jLabel27);
        jLabel27.setBounds(0, 300, 180, 30);

        txtreturn1.setEditable(false);
        txtreturn1.setBackground(new java.awt.Color(255, 255, 204));
        txtreturn1.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txtreturn1.setText("0.00");
        jPanel2.add(txtreturn1);
        txtreturn1.setBounds(180, 330, 120, 29);

        txtwhtax1.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txtwhtax1.setText("0.00");
        txtwhtax1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtwhtax1FocusLost(evt);
            }
        });
        txtwhtax1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtwhtax1ActionPerformed(evt);
            }
        });
        jPanel2.add(txtwhtax1);
        txtwhtax1.setBounds(180, 300, 120, 29);

        jLabel28.setText("Claim back from company");
        jPanel2.add(jLabel28);
        jLabel28.setBounds(10, 360, 170, 30);

        txtrefund1.setEditable(false);
        txtrefund1.setBackground(new java.awt.Color(255, 255, 204));
        txtrefund1.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txtrefund1.setText("0.00");
        jPanel2.add(txtrefund1);
        txtrefund1.setBounds(180, 360, 120, 29);

        rdoPTC.setText("ไม่เกิน 1,000 บาท เบิก Petty Cash");
        rdoPTC.setEnabled(false);
        jPanel2.add(rdoPTC);
        rdoPTC.setBounds(320, 360, 220, 20);

        rdoTransBank.setText("เกิน 1,000 บาท โอนเข้าบัญชี");
        rdoTransBank.setEnabled(false);
        jPanel2.add(rdoTransBank);
        rdoTransBank.setBounds(590, 360, 190, 20);

        txtBName.setEditable(false);
        txtBName.setBackground(new java.awt.Color(204, 255, 255));
        txtBName.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jPanel2.add(txtBName);
        txtBName.setBounds(780, 360, 200, 29);

        rdoReturnSCB.setText("SCB");
        rdoReturnSCB.setEnabled(false);
        rdoReturnSCB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rdoReturnSCBActionPerformed(evt);
            }
        });
        jPanel2.add(rdoReturnSCB);
        rdoReturnSCB.setBounds(320, 330, 60, 27);

        rdoReturnKBANK.setText("KBANK-340-2-314428");
        rdoReturnKBANK.setEnabled(false);
        rdoReturnKBANK.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rdoReturnKBANKActionPerformed(evt);
            }
        });
        jPanel2.add(rdoReturnKBANK);
        rdoReturnKBANK.setBounds(590, 330, 170, 27);

        txtBCode.setEditable(false);
        txtBCode.setBackground(new java.awt.Color(204, 255, 255));
        txtBCode.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jPanel2.add(txtBCode);
        txtBCode.setBounds(690, 390, 290, 29);

        btnRefund.setText("Search");
        btnRefund.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRefundActionPerformed(evt);
            }
        });
        jPanel2.add(btnRefund);
        btnRefund.setBounds(990, 360, 80, 20);

        jLabel29.setText("Bank");
        jPanel2.add(jLabel29);
        jLabel29.setBounds(650, 390, 40, 20);

        jLabel30.setText("Name");
        jPanel2.add(jLabel30);
        jLabel30.setBounds(780, 340, 80, 20);

        txtamount1.setEditable(false);
        txtamount1.setBackground(new java.awt.Color(255, 255, 204));
        txtamount1.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txtamount1.setText("0.00");
        jPanel2.add(txtamount1);
        txtamount1.setBounds(180, 180, 120, 29);

        cmb_IT1GP_1.setBackground(new java.awt.Color(204, 255, 255));
        cmb_IT1GP_1.setEditable(false);
        jPanel2.add(cmb_IT1GP_1);
        cmb_IT1GP_1.setBounds(430, 180, 420, 20);

        radionontax_1.setForeground(new java.awt.Color(255, 0, 0));
        radionontax_1.setText("ไม่หักภาษี ณ ที่จ่าย");
        radionontax_1.setEnabled(false);
        jPanel2.add(radionontax_1);
        radionontax_1.setBounds(950, 80, 130, 30);

        btn_WHTAXStep1.setText("Add W/H TAX");
        btn_WHTAXStep1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_WHTAXStep1ActionPerformed(evt);
            }
        });
        jPanel2.add(btn_WHTAXStep1);
        btn_WHTAXStep1.setBounds(320, 300, 160, 30);

        DateTransfer.setEnabled(false);
        jPanel2.add(DateTransfer);
        DateTransfer.setBounds(470, 330, 120, 29);

        jLabel40.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel40.setText("Settlem Date");
        jPanel2.add(jLabel40);
        jLabel40.setBounds(710, 10, 90, 30);

        jTabbedPane1.addTab("Cash Advance Settlement", jPanel2);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTabbedPane1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(label17, javax.swing.GroupLayout.PREFERRED_SIZE, 1060, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblCompanyName, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 1051, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 24, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(lblCompanyName, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(label17, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 660, Short.MAX_VALUE)
                .addContainerGap())
        );

        setSize(new java.awt.Dimension(1118, 795));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents
    private static Date calculateMaxFriday() {
        Calendar calendar = Calendar.getInstance();
        calendar.add(Calendar.WEEK_OF_YEAR, 3); // Move 3 weeks forward

        // Find the next Friday
        while (calendar.get(Calendar.DAY_OF_WEEK) != Calendar.FRIDAY) {
            calendar.add(Calendar.DAY_OF_YEAR, -1); // Move backward to the nearest Friday
        }

        return calendar.getTime();
    }

    /**
     * Checks if the given date is a Friday.
     */
    private static boolean isFriday(Date date) {
        Calendar calendar = Calendar.getInstance();
        calendar.setTime(date);
        return calendar.get(Calendar.DAY_OF_WEEK) == Calendar.FRIDAY;
    }

    private void SetNewCashAdvanRequester() {
        ClassCheckDataProgram cdp = new ClassCheckDataProgram();
        txtReccorder.setText(LoginUsername);
        txtDateAdvance.setText(cdp.GetDateCurrenttime());

        try {

            lblCompanyName.setText("Company Name : " + LoginCompanyName);
            setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource("icon.png")));
            this.setTitle("Cash Advance requester For " + lblCompanyName.getText());
        } catch (Exception e) {
            System.out.println(e.toString());
        }
    }

    private void Set_ActiveStep1(boolean Status) {
        radionormal.setEnabled(Status);
        radiocancel.setEnabled(Status);
        radiosubmit.setEnabled(Status);
        btnSave.setEnabled(Status);
        btnCancel.setEnabled(Status);
        txtAdvanceNo.setEnabled(Status);
        txtDateAdvance.setEnabled(Status);
        cmbcostcenter.setEnabled(Status);
        cmbstaffcode.setEnabled(Status);
        txtpurpose_1.setEnabled(Status);
        txtpurpose_2.setEnabled(Status);
        txtpurpose_3.setEnabled(Status);
        DateOperationFrom.setEnabled(Status);
        DateOperationTo.setEnabled(Status);
        txtamount.setEnabled(Status);
        txtPONO.setEnabled(Status);
        DateReceive.setEnabled(Status);
        DateSettlement.setEnabled(Status);
        txtReccorder.setEnabled(Status);
        radionormal.setEnabled(Status);
        radiocancel.setEnabled(Status);
        radiosubmit.setEnabled(Status);
        btnaddline.setEnabled(false);
        radio_transfer.setEnabled(Status);
        radio_cheque.setEnabled(Status);
        Date DateOpeT = new Date();
        DateOperationFrom.setDate(DateOpeT);

    }

    private void Set_ActiveStep2(boolean Status) {
        radionormal1.setEnabled(Status);
        radiosubmit1.setEnabled(Status);
        btnsave1.setEnabled(Status);
        btncancel1.setEnabled(Status);
        griddetail.setEnabled(Status);
        ////  txtinvoiceline.setEnabled(Status);
        ////  txtsupline.setEnabled(Status);
        ////  dateInvoiceline.setEnabled(Status);
        ////  txtdescline.setEnabled(Status);
//        radionontax_1.setEnabled(Status);
//        radiofrontwork_1.setEnabled(Status);
//        radiotaxchec_1.setEnabled(Status);
        btn_WHTAXStep1.setEnabled(Status);
        btnaddline.setEnabled(Status);

    }

    private void Set_RdoSettlement(boolean Status) {
        rdoReturnSCB.setEnabled(Status);
        rdoReturnKBANK.setEnabled(Status);
        rdoPTC.setEnabled(Status);
        rdoTransBank.setEnabled(Status);
        rdoPTC.setSelected(Status);
        rdoReturnSCB.setSelected(Status);
        rdoReturnKBANK.setSelected(Status);
        rdoPTC.setSelected(Status);
        rdoTransBank.setSelected(Status);

    }

    private void SetFormDataWithSTEP2_Cash(String CASH_CANO_) {
        Classgetdata cgd = new Classgetdata();
        ClassCheckDataProgram checkdataprogram = new ClassCheckDataProgram();
        ResultSet rs = cgd.GetDataCashAdvanRequest_HeaderResultData(CASH_CANO_);
        Set_RdoSettlement(false);
//        rdoReturnSCB.setSelected(true);
        try {
            while (rs.next()) {
                txtAdvanceNo1.setText(rs.getString("CASH_CANO"));
                txtDateAdvance1.setText(checkdataprogram.GetDateFormatSetShowString(checkdataprogram.GetDecmalTodate(rs.getInt("CASH_DATE"))));
                cmbcostcenter1.setSelectedItem(cgd.Get_CostcenterNameWithCode(rs.getString("CASH_COST").trim()));
                cmbstaffcode1.setSelectedItem(cgd.Get_SupplierNameWithCode(rs.getString("CASH_EMPY").trim()));
                txtpurpose1_1.setText(rs.getString("CASH_PPS1"));
                txtpurpose1_2.setText(rs.getString("CASH_PPS2"));
                txtpurpose1_3.setText(rs.getString("CASH_PPS3"));
                txtamount1.setText(rs.getString("CASH_AMT"));
                DatePlanSettem.setDate(checkdataprogram.GetDecmalTodate(rs.getInt("CASH_STDP")));
                //    txtrecord1.setText(rs.getString("CASH_RCRA"));
                cmb_IT1GP_1.setText(cgd.GetExpensSubGroupDescWithCode(rs.getString("CASH_EXPG")));
                if (rs.getString("CASH_EXPG").trim().equals("4.1")) {
                    importduty = true;
                } else {
                    importduty = false;
                }
                DateReceive1.setDate(checkdataprogram.GetDecmalTodate(rs.getInt("CASH_REDA")));
                if (rs.getInt("CASH_STDT") != 0) {
                    DateSettlem.setDate(checkdataprogram.GetDecmalTodate(rs.getInt("CASH_STDT")));
                }
                SimpleDateFormat formatter = new SimpleDateFormat("yyyyMMdd");
                if (rs.getString("CASH_RCRA") != null && !rs.getString("CASH_RCRA").isEmpty()) {
                    DateTransfer.setDate(formatter.parse(rs.getString("CASH_RCRA")));
                } else {
                    DateTransfer.setDate(null);
                }
//                if (rs.getString("CASH_RCRA") != null ) {
//                    DateTransfer.setDate(checkdataprogram.GetDecmalTodate(rs.getString("CASH_RCRA")));
//                }
                String WHTAX = "";
                WHTAX = rs.getString("CASH_WHTAX").trim();
                String WHTYPE = rs.getString("CASH_WHTYPE").trim();
                if (WHTAX.equalsIgnoreCase("0.00") || WHTAX.equalsIgnoreCase("")) {
                    txtwhtax1.setText("0.00");
                } else {
                    txtwhtax1.setText(WHTAX);
                }

                if (WHTYPE.equalsIgnoreCase("1")) {
                    radiotaxchec_1.setSelected(true);
                } else if (WHTYPE.equalsIgnoreCase("2")) {
                    radiofrontwork_1.setSelected(true);
                    btn_WHTAXStep1.setEnabled(true);
//                    txtwhtax1.setEditable(true);
                } else {
                    radiotaxchec_1.setSelected(false);
                    radiofrontwork_1.setSelected(false);
                    radionontax_1.setSelected(true);

                }

                String Cash_Retobank = rs.getString("CASH_RETOBANK").trim();
                if (Cash_Retobank.equalsIgnoreCase("SCB")) {
                    rdoReturnSCB.setSelected(true);
                } else if (Cash_Retobank.equalsIgnoreCase("KBANK")) {
                    rdoReturnKBANK.setSelected(true);
                } else if (Cash_Retobank.equalsIgnoreCase("Petty Cash")) {
                    rdoPTC.setSelected(true);
                } else if (Cash_Retobank.length() == 10) {
                    rdoTransBank.setSelected(true);
                    ResultSet rsl = cgd.GetDataCashAdvanRequest_BankSupp(Cash_Retobank);
                    if (rsl.next()) {
                        txtBName.setText(rsl.getString("IDSUNM").trim());
                        txtBCode.setText(rsl.getString("IRYRE1").trim());
                    }
//                    txtBName.setText(Cash_Retobank);
                }

                String Stattt = "";
                Stattt = rs.getString("CASH_STAT").trim();

                if (null != Stattt) {
                    switch (Stattt) {
                        case "40":
                            radionormal1.setSelected(true);
                            radiosubmit1.setSelected(false);
                            break;
                        case "50":
                            radionormal1.setSelected(false);
                            radiosubmit1.setSelected(true);
                            break;
                        case "99":
                            radionormal1.setSelected(false);
                            radiosubmit1.setSelected(false);
                            break;
                        default:
                            break;
                    }
                }

            }
            rs.close();
            Get_DetailGrid(CASH_CANO_);
        } catch (Exception e) {
            System.out.println(e.toString());
        }
    }

    private void Cal_AmountSettlementWithGrid(Double Advamt, Double AmtBfVat, Double AmtVat, Double TotalAmt) {
        ClassCheckDataProgram checkdataprogram = new ClassCheckDataProgram();
        Double Sum = 0.00;

        txtamtbfvat1.setText(String.valueOf(AmtBfVat).trim());
        txtvat1.setText(String.valueOf(AmtVat).trim());
        txtamt1.setText(String.valueOf(TotalAmt).trim());

//        Cal_WHTAX();
        Double WHTAX = 0.00;
        if (!txtwhtax1.getText().trim().isEmpty()) {
            WHTAX = Double.parseDouble(txtwhtax1.getText().trim());
        }

        txtwhtax1.setText(String.valueOf(WHTAX).trim());
        Sum = Advamt - (TotalAmt - WHTAX);
        System.out.println(Advamt + "- (" + TotalAmt + "-" + WHTAX + ")");
        Sum = checkdataprogram.Double2digitReturn(Sum);
        System.out.println("SUM" + Sum);
        if (Sum > 0.00) {
            txtreturn1.setText(String.valueOf(Sum).trim());
            txtrefund1.setText("0.00");
            rdoReturnSCB.setEnabled(true);
            rdoReturnKBANK.setEnabled(true);
            ClearBanktxt();
            modeforreceive = true;
//            checkfortransfer = true;
            System.out.println("SUM AFTER RECIEVE" + Sum);
        } else {
            if (Sum != 0.00) {
                Sum = Sum * (-1);
                modeforreceive = false;
                System.out.println("SUM LESS RECIEVE" + Sum);
            }

            txtrefund1.setText(String.valueOf(Sum).trim());
            txtreturn1.setText("0.00");
            if (Sum < 1000.00 && Sum != 0.00) {
                System.out.println("Sum is less than 1000 so petty cash");
                if (LoginCono.equalsIgnoreCase("10")) {
                    rdoPTC.setSelected(true);
                    rdoPTC.setEnabled(true);
                    modeforreceive = false;
                } else {
                    rdoTransBank.setSelected(true);
                    rdoTransBank.setEnabled(true);
                    modeforreceive = false;
                }
                ClearBanktxt();
                rdoReturnSCB.setSelected(true);
            } else if (Sum > 1000.00) {
                System.out.println("Sum is more 1000 so normal return");
                rdoReturnSCB.setSelected(true);
                rdoTransBank.setSelected(true);
                rdoTransBank.setEnabled(true);
                modeforreceive = false;
            } else {
                System.out.println("Sum is 0 so no return");
                Set_RdoSettlement(false);
                modeforreceive = false;
            }
            modeforreceive = false;
//            checkfortransfer = false;
        }

    }

    private void Cal_AmountSettlementWithGridDecimal(BigDecimal Advamt, BigDecimal AmtBfVat, BigDecimal AmtVat, BigDecimal TotalAmt) {
        ClassCheckDataProgram checkdataprogram = new ClassCheckDataProgram();
        BigDecimal Sum = BigDecimal.ZERO;

        txtamtbfvat1.setText(AmtBfVat.toPlainString().trim());
        txtvat1.setText(AmtVat.toPlainString().trim());
        txtamt1.setText(TotalAmt.toPlainString().trim());

        // Initialize WHTAX as BigDecimal
        BigDecimal WHTAX = BigDecimal.ZERO;
        if (!txtwhtax1.getText().trim().isEmpty()) {
            try {
                WHTAX = new BigDecimal(txtwhtax1.getText().trim());
            } catch (NumberFormatException e) {
                System.err.println("Invalid WHTAX input: " + txtwhtax1.getText());
                WHTAX = BigDecimal.ZERO;
            }
        }

        txtwhtax1.setText(WHTAX.toPlainString().trim());

        // Perform BigDecimal arithmetic: Sum = Advamt - (TotalAmt - WHTAX)
        Sum = Advamt.subtract(TotalAmt.subtract(WHTAX));
        System.out.println(Advamt + " - (" + TotalAmt + " - " + WHTAX + ")");
        Sum = checkdataprogram.BigDicimal2digitReturn(Sum); // Assuming this works with BigDecimal
        System.out.println("SUM: " + Sum);

        if (Sum.compareTo(BigDecimal.ZERO) > 0) { // Sum > 0
            txtreturn1.setText(Sum.toPlainString().trim());
            txtrefund1.setText("0.00");
            rdoReturnSCB.setEnabled(true);
            rdoReturnKBANK.setEnabled(true);
            ClearBanktxt();
            modeforreceive = true;
            System.out.println("SUM AFTER RECEIVE: " + Sum);
        } else {
            if (Sum.compareTo(BigDecimal.ZERO) != 0) { // Sum != 0
                Sum = Sum.negate(); // Sum = Sum * -1
                modeforreceive = false;
                System.out.println("SUM LESS RECEIVE: " + Sum);
            }

            txtrefund1.setText(Sum.toPlainString().trim());
            txtreturn1.setText("0.00");

            if (Sum.compareTo(new BigDecimal("1000.00")) < 0 && Sum.compareTo(BigDecimal.ZERO) != 0) { // Sum < 1000 and Sum != 0
                System.out.println("Sum is less than 1000 so petty cash");
                if (LoginCono.equalsIgnoreCase("10")) {
                    rdoPTC.setSelected(true);
                    rdoPTC.setEnabled(true);
                    modeforreceive = false;
                } else {
                    rdoTransBank.setSelected(true);
                    rdoTransBank.setEnabled(true);
                    modeforreceive = false;
                }
                ClearBanktxt();
                rdoReturnSCB.setSelected(true);
            } else if (Sum.compareTo(new BigDecimal("1000.00")) > 0) { // Sum > 1000
                System.out.println("Sum is more than 1000 so normal return");
                rdoReturnSCB.setSelected(true);
                rdoTransBank.setSelected(true);
                rdoTransBank.setEnabled(true);
                modeforreceive = false;
            } else {
                System.out.println("Sum is 0 so no return");
                Set_RdoSettlement(false);
                modeforreceive = false;
            }
            modeforreceive = false;
        }
    }

    private void ClearBanktxt() {
        txtBName.setText("");
        txtBCode.setText("");
    }

    private void Cal_AmountSettlementWithOutGrid() {
        ClassCheckDataProgram checkdataprogram = new ClassCheckDataProgram();
        Double Advamt = Double.parseDouble(txtamount1.getText().trim());
        Double AmtBfVat = Double.parseDouble(txtamtbfvat1.getText().trim());
        Double AmtVat = Double.parseDouble(txtvat1.getText().trim());
        Double TotalAmt = Double.parseDouble(txtamt1.getText().trim());
        Double WHTAX = Double.parseDouble(txtwhtax1.getText().trim());
        Double Sum = 0.00;
        txtreturn1.setText("0.00");
        txtrefund1.setText("0.00");
        Sum = Advamt - (TotalAmt - WHTAX);
        Sum = checkdataprogram.Double2digitReturn(Sum);
        Set_RdoSettlement(false);
        if (Sum > 0.00) {
            txtreturn1.setText(String.valueOf(Sum).trim());
            rdoReturnSCB.setSelected(true);
            rdoReturnSCB.setEnabled(true);
            System.out.println("few");

//            txtreturn1
            ClearBanktxt();
        } else {
            if (Sum != 0.00) {
                Sum = Sum * (-1);
            }
            txtrefund1.setText(String.valueOf(Sum).trim());
            if (Sum < 1000.00 && Sum != 0.00) {
                txtrefund1.setText(String.valueOf(Sum).trim());
//                rdoPTC.setSelected(true);
//                rdoPTC.setEnabled(true);
                if (!LoginCono.equalsIgnoreCase("10")) {
                    rdoPTC.setSelected(true);
                    rdoPTC.setEnabled(true);
                } else {
                    rdoTransBank.setSelected(true);
                    rdoTransBank.setEnabled(true);
                }
                rdoReturnSCB.setSelected(false);

                ClearBanktxt();

            } else if (Sum >= 1000.00) {
                txtrefund1.setText(String.valueOf(Sum).trim());
                rdoTransBank.setSelected(true);
                rdoTransBank.setEnabled(true);
                rdoPTC.setEnabled(false);

            } else {
                Set_RdoSettlement(false);
            }
        }

    }

//    private void Get_DetailGrid(String CashAdvanceNo) {
//
//        Classgetdata cgd = new Classgetdata();
//        ClassCheckDataProgram checkdataprogram = new ClassCheckDataProgram();
//        ResultSet rs = cgd.GetDataAdvanceDetailResultData(CashAdvanceNo);
//        try {
//            //    SetModel();
//            model = (DefaultTableModel) griddetail.getModel();
//            int iiii = 0;
//
//            Double amt = 0.00;
//            Double vat = 0.00;
//            Double amtBeforeVat = 0.00;
//            Double Sum = 0.00;
//            Double Advamt = Double.parseDouble(txtamount1.getText().trim());
//            while (rs.next()) {
//                //  String Nassme= cgd.GetItemName_MitMas(rs.getString("EPRL_ITNO").trim());
//                model.setValueAt(rs.getString("SETT_INVC").trim(), iiii, 0);
//                model.setValueAt(rs.getString("SETT_SUPP").trim(), iiii, 1);
//                model.setValueAt(cgd.Get_SupplierNameWithCode2(rs.getString("SETT_SUPP").trim()), iiii, 2);
//                model.setValueAt(checkdataprogram.GetDateFormatSetShowString(checkdataprogram.GetDecmalTodate(rs.getInt("SETT_INVD"))), iiii, 3);
//
//                model.setValueAt(rs.getString("SETT_DESC").trim(), iiii, 4);
//                model.setValueAt(rs.getString("SETT_COST").trim(), iiii, 5);
//
//                model.setValueAt(rs.getDouble("SETT_AMTB"), iiii, 6);
//                model.setValueAt(rs.getDouble("SETT_VATC"), iiii, 7);
//                model.setValueAt(rs.getDouble("SETT_VATA"), iiii, 8);
//                model.setValueAt(rs.getString("SETT_NODES"), iiii, 9);
//                model.setValueAt(rs.getDouble("SETT_AMTT"), iiii, 10);
//                model.setValueAt(rs.getString("SETT_BRAC"), iiii, 11);
//                amt += rs.getDouble("SETT_AMTT");
//                vat += rs.getDouble("SETT_VATA");
//                amtBeforeVat += rs.getDouble("SETT_AMTB");
//                iiii++;
//
//            }
//
//            amtBeforeVat = checkdataprogram.Double2digitReturn(amtBeforeVat);
//            amt = checkdataprogram.Double2digitReturn(amt);
//            vat = checkdataprogram.Double2digitReturn(vat);
//            Cal_AmountSettlementWithGrid(Advamt, amtBeforeVat, vat, amt);
//            DateTransfer.setEnabled(modeforreceive);
//            jLabel15.setEnabled(modeforreceive);
//            if (!modeforreceive) {
//                DateTransfer.setDate(null);
//            }
//            rs.close();
//
//        } catch (Exception e) {
//            System.out.println(e.toString());
//        }
//
//    }
    private void Get_DetailGrid(String CashAdvanceNo) {

        Classgetdata cgd = new Classgetdata();
        ClassCheckDataProgram checkdataprogram = new ClassCheckDataProgram();
        ResultSet rs = cgd.GetDataAdvanceDetailResultData(CashAdvanceNo);
        try {
            //    SetModel();
            model = (DefaultTableModel) griddetail.getModel();
            int iiii = 0;

            BigDecimal amt = new BigDecimal("0.00");
            BigDecimal vat = new BigDecimal("0.00");
            BigDecimal amtBeforeVat = new BigDecimal("0.00");
            BigDecimal Sum = new BigDecimal("0.00");
            BigDecimal Advamt = new BigDecimal(txtamount1.getText().trim());
            while (rs.next()) {
                //  String Nassme= cgd.GetItemName_MitMas(rs.getString("EPRL_ITNO").trim());
                model.setValueAt(rs.getString("SETT_INVC").trim(), iiii, 0);
                model.setValueAt(rs.getString("SETT_SUPP").trim(), iiii, 1);
                model.setValueAt(cgd.Get_SupplierNameWithCode2(rs.getString("SETT_SUPP").trim()), iiii, 2);
                model.setValueAt(checkdataprogram.GetDateFormatSetShowString(checkdataprogram.GetDecmalTodate(rs.getInt("SETT_INVD"))), iiii, 3);

                model.setValueAt(rs.getString("SETT_DESC").trim(), iiii, 4);
                model.setValueAt(rs.getString("SETT_COST").trim(), iiii, 5);

                model.setValueAt(rs.getBigDecimal("SETT_AMTB"), iiii, 6);
                model.setValueAt(rs.getBigDecimal("SETT_VATC"), iiii, 7);
                model.setValueAt(rs.getBigDecimal("SETT_VATA"), iiii, 8);
                model.setValueAt(rs.getString("SETT_NODES"), iiii, 9);
                model.setValueAt(rs.getBigDecimal("SETT_AMTT"), iiii, 10);
                model.setValueAt(rs.getString("SETT_BRAC"), iiii, 11);
                amt = amt.add(rs.getBigDecimal("SETT_AMTT"));
                vat = vat.add(rs.getBigDecimal("SETT_VATA"));
                amtBeforeVat = amtBeforeVat.add(rs.getBigDecimal("SETT_AMTB"));
//                amtBeforeVat += rs.getDouble("SETT_AMTB");
                iiii++;

            }

            amtBeforeVat = checkdataprogram.BigDicimal2digitReturn(amtBeforeVat);
            amt = checkdataprogram.BigDicimal2digitReturn(amt);
            vat = checkdataprogram.BigDicimal2digitReturn(vat);
            Cal_AmountSettlementWithGridDecimal(Advamt, amtBeforeVat, vat, amt);
            DateTransfer.setEnabled(modeforreceive);
            jLabel15.setEnabled(modeforreceive);
            if (!modeforreceive) {
                DateTransfer.setDate(null);
            }
            rs.close();

        } catch (Exception e) {
            System.out.println(e.toString());
        }

    }

    private void btnCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnCancelActionPerformed
    private void SetFormDataWithSTEP1_Cash(String CASH_CANO_) {
        Classgetdata cgd = new Classgetdata();
        ClassCheckDataProgram checkdataprogram = new ClassCheckDataProgram();
        ResultSet rs = cgd.GetDataCashAdvanRequest_HeaderResultData(CASH_CANO_);
        try {
            while (rs.next()) {

                if (rs.getString("CASH_PAYT").equalsIgnoreCase("TRANSFER")) {
                    radio_transfer.setSelected(true);
                    radio_cheque.setSelected(false);
                } else {
                    radio_transfer.setSelected(false);
                    radio_cheque.setSelected(true);
                }
                txtAdvanceNo.setText(rs.getString("CASH_CANO"));
                txtDateAdvance.setText(checkdataprogram.GetDateFormatSetShowString(checkdataprogram.GetDecmalTodate(rs.getInt("CASH_DATE"))));
                cmbcostcenter.setText(cgd.Get_CostcenterNameWithCode(rs.getString("CASH_COST").trim()));
                cmbstaffcode.setText(cgd.Get_SupplierNameWithCode(rs.getString("CASH_EMPY").trim()));
                txtpurpose_1.setText(rs.getString("CASH_PPS1"));
                txtpurpose_2.setText(rs.getString("CASH_PPS2"));
                txtpurpose_3.setText(rs.getString("CASH_PPS3"));
                DateOperationFrom.setDate(checkdataprogram.GetDecmalTodate(rs.getInt("CASH_OPDF")));
                DateOperationTo.setDate(checkdataprogram.GetDecmalTodate(rs.getInt("CASH_OPDT")));
                txtamount.setText(rs.getString("CASH_AMT"));
                txtRefPo.setText(rs.getString("CASH_REF1").trim());
                txtPONO.setText(rs.getString("CASH_REF3"));
                DateReceive.setDate(checkdataprogram.GetDecmalTodate(rs.getInt("CASH_REDP")));
                DateSettlement.setDate(checkdataprogram.GetDecmalTodate(rs.getInt("CASH_STDP")));
                txtReccorder.setText(rs.getString("CASH_REQB"));
                String Stattt = "";
                Stattt = rs.getString("CASH_STAT").trim();

                cmb_IT1GP.setText(cgd.GetExpensSubGroupDescWithCode(rs.getString("CASH_EXPG")));
                cmbSupplierADV.setText(cgd.Get_SupplierNameWithCode(rs.getString("CASH_PAYSUP").trim()));

                ResultSet Getsupp = cgd.GetDataCashAdvanRequest_BankSupp(rs.getString("CASH_PAYSUP").trim());
                while (Getsupp.next()) {
                    txtbranch.setText(Getsupp.getString("IRTFNO"));
                    txtaccno.setText(Getsupp.getString("IRSUCM"));
                    txtaccname.setText(Getsupp.getString("IRYRE1"));
                }

                String CASH_WHTAX = rs.getString("CASH_WHTAX").trim();

                if (null != CASH_WHTAX) {
                    switch (CASH_WHTAX) {
                        case "0":
                            radionontax.setSelected(true);
                            radiotaxchec.setSelected(false);
                            radiofrontwork.setSelected(false);
                            break;
                        case "1":
                            radiotaxchec.setSelected(false);
                            radiofrontwork.setSelected(true);
                            radionontax.setSelected(false);
                            break;
                        case "2":
                            radiotaxchec.setSelected(false);
                            radiofrontwork.setSelected(false);
                            radionontax.setSelected(true);
                            break;
                    }
                }

                if (null != Stattt) {
                    switch (Stattt) {
                        case "10":
                            radionormal.setSelected(true);
                            radiocancel.setSelected(false);
                            radiosubmit.setSelected(false);
                            break;
                        case "20":
                            radionormal.setSelected(false);
                            radiocancel.setSelected(false);
                            radiosubmit.setSelected(true);
                            break;
                        case "99":
                            radionormal.setSelected(false);
                            radiocancel.setSelected(true);
                            radiosubmit.setSelected(false);
                            break;
                        default:
                            break;
                    }
                }

            }
            rs.close();
        } catch (Exception e) {
            System.out.println(e.toString());
        }
    }

    private void msbox(String strr) {
        int dialogButton = JOptionPane.ERROR_MESSAGE;
        JOptionPane.showMessageDialog(null, strr, "Warning", dialogButton);
    }

    private void msboxok(String strr) {
        JOptionPane.showMessageDialog(null, strr);
    }
    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
        // TODO add your handling code here:

        String statussetdata;
        ClassSetdata setdata = new ClassSetdata();
        ClassCheckDataProgram cdp = new ClassCheckDataProgram();
        if (CheckDataStep1ToSave() == false) {
            return;
        }

        int dialogButton = JOptionPane.YES_NO_OPTION;
        int dialogResult = JOptionPane.showConfirmDialog(null, "Would You Like to Save Cash Advan Requester ?", "Warning",
                dialogButton);
        if (dialogResult == JOptionPane.YES_OPTION) {

            String CASH_CANO = txtAdvanceNo.getText().trim();
            String cmbstaffcode_h = (String) cmbstaffcode.getText();
            String CASH_EMPY = cdp.get_SemiColonValue0(cmbstaffcode_h).trim();
            String CASH_COST_H = cmbcostcenter.getText().trim();
            String CASH_COST = cdp.get_SemiColonValue0(CASH_COST_H).trim(); // GET COST CENTER
            String CASH_DATE = cdp.GetDateDecmalCurrenttime(); // GET PURPOSE SAMPLE
            String CASH_OPDF = cdp.GetDateFormatSet(DateOperationFrom.getDate()).trim();
            String CASH_OPDT = cdp.GetDateFormatSet(DateOperationTo.getDate()).trim();
            ClassCheckDataProgram CcheckData = new ClassCheckDataProgram();
            Boolean purposesample1 = CcheckData.CheckdatainputString(txtpurpose_1.getText());
            Boolean purposesample2 = CcheckData.CheckdatainputString(txtpurpose_2.getText());
            Boolean purposesample3 = CcheckData.CheckdatainputString(txtpurpose_3.getText());
            String cmbPaysup = (String) cmbSupplierADV.getText();
            String[] CASH_PAYSUP = cmbPaysup.trim().split(":");
            String EXPGROUP = (String) cmb_IT1GP.getText().trim();
            String[] CASH_EXPGP = EXPGROUP.trim().split(":");

            String CASH_PPS1 = txtpurpose_1.getText().trim();
            int countPurpose = CASH_PPS1.length();
            if (countPurpose > 60) {
                msbox("Please Check Purpose 1 To Maximum 60 digit");
                return;
            }

            String CASH_PPS2 = txtpurpose_2.getText().trim();
            int countPurpose2 = CASH_PPS2.length();
            if (countPurpose2 > 60) {
                msbox("Please Check Purpose 2 To Maximum 60 digit");
                return;
            }

            String CASH_PPS3 = txtpurpose_3.getText().trim();
            int countPurpose3 = CASH_PPS3.length();
            if (countPurpose3 > 60) {
                msbox("Please Check Purpose 3 To Maximum 60 digit");
                return;
            }

            double CASH_AMT = 0;
            try {
                CASH_AMT = Double.parseDouble(txtamount.getText());
            } catch (Exception e) {
                CASH_AMT = 0;
            }
            String CASH_REDP = cdp.GetDateFormatSet(DateReceive.getDate()).trim();
            String CASH_STDP = cdp.GetDateFormatSet(DateSettlement.getDate()).trim();
            //String CASH_STDP=cdp.GetDateDecmalCurrenttime(); // GET RECEIVE DATE SAMPLE
            String REF_PO = txtRefPo.getText().trim();
            String PO_NO = txtPONO.getText().trim();
            String CASH_REQB = txtReccorder.getText().trim();
            String testornot = "";

            String CASH_STAT = "";

            if (radionormal.isSelected() == true) {
                CASH_STAT = "10";
            }
            if (radiosubmit.isSelected() == true) {

                CASH_STAT = "20";
            }

            if (radiocancel.isSelected() == true) {
                CASH_STAT = "99";
            }
            //  model = (DefaultTableModel) griddetail.getModel();

            String CASH_WHTAX_TYPE = "0";

            if (radiotaxchec.isSelected() == true) {
                CASH_WHTAX_TYPE = "1";
            }
            if (radiofrontwork.isSelected() == true) {
                CASH_WHTAX_TYPE = "2";
            }

            String payment_type = "TRANSFER";
            if (radio_cheque.isSelected() == true) {
                payment_type = "CHEQUE";
            }

            String[] chk = cmb_IT1GP.getText().trim().split(":");
            if (chk[0].substring(0, 1).equalsIgnoreCase("8") && (txtPONO.getText().isEmpty() || txtRefPo.getText().isEmpty())) {
                msbox("กรุณาเพิ่มหมายเลข Capex หรือ PO !!");
                return;
            }

            if (CASH_CANO.isEmpty()) {
                CASH_CANO = setdata.SaveCashAdvanceRequesterHeaderStep1Form(CASH_CANO, CASH_DATE,
                        CASH_EMPY, CASH_COST, CASH_OPDF,
                        CASH_OPDT, CASH_PPS1, CASH_PPS2,
                        CASH_PPS3, CASH_AMT, CASH_REDP,
                        CASH_STDP, REF_PO, CASH_REQB, "10", CASH_PAYSUP[0], LoginCono, LoginDivision, CASH_EXPGP[0], CASH_WHTAX_TYPE, PO_NO.trim(), payment_type);

            } else {
                CASH_CANO = setdata.SaveCashAdvanceRequesterHeaderStep1Form(CASH_CANO, CASH_DATE,
                        CASH_EMPY, CASH_COST, CASH_OPDF,
                        CASH_OPDT, CASH_PPS1, CASH_PPS2,
                        CASH_PPS3, CASH_AMT, CASH_REDP,
                        CASH_STDP, REF_PO, CASH_REQB, CASH_STAT, CASH_PAYSUP[0], LoginCono, LoginDivision, CASH_EXPGP[0], CASH_WHTAX_TYPE, PO_NO.trim(), payment_type);

            }

            if (CASH_CANO != "" && !CASH_CANO.isEmpty()) {
                SetFormDataWithSTEP1_Cash(CASH_CANO);
                txtAdvanceNo.setText(CASH_CANO);
                if (CASH_STAT.equals("20")) {
                    if (Table_fin_caadd.equals("BRLDTABK01.FIN_CASHADALL")) {
                        testornot = "_test";
                    }
                    ClassgetReport cgr = new ClassgetReport();
                    cgr.getReportAdvReq1(CASH_CANO, testornot);
                    this.dispose();
                }

                msboxok("Save Cash Requester Complete");

            } else {
                msboxok("Save Cash Requester Fail");
            }
        }
    }//GEN-LAST:event_btnSaveActionPerformed

    private boolean CheckDataStep1ToSave() {
        ClassCheckDataProgram CcheckData = new ClassCheckDataProgram();
        Boolean DateOperationF = CcheckData.CheckdatainputDate(DateOperationFrom.getDate());
        Boolean DateOperationT = CcheckData.CheckdatainputDate(DateOperationTo.getDate());
        Date DateOpeT = new Date();
        JFrame frame = new JFrame("Date Picker Example");
//        DateOperationFrom.setDate(DateOpeT);
//        Date fromDate = DateOperationFrom.getDate();
//        Date todayDate = new Date();
////         Date currentDate = new Date();
//        Date toDate = DateOperationTo.getDate();
//        long diffInMillies = Math.abs(toDate.getTime() - fromDate.getTime());
//        long diffInDays = TimeUnit.DAYS.convert(diffInMillies, TimeUnit.MILLISECONDS);
//
//        long diffInMillies2 = Math.abs(DateOpeT.getTime() - toDate.getTime());
//        long diffInDays2 = TimeUnit.DAYS.convert(diffInMillies2, TimeUnit.MILLISECONDS);
//        JXDatePicker datePicker = new JXDatePicker();
//        long diffInMillies = Math.abs(toDate.getTime() - todayDate.getTime());
//        long diffInDays = TimeUnit.DAYS.convert(diffInMillies, TimeUnit.MILLISECONDS);

//        long diffInMillies2 = Math.abs(DateOpeT.getTime() - fromDate.getTime());
//        long diffInDays2 = TimeUnit.DAYS.convert(diffInMillies2, TimeUnit.MILLISECONDS);
//        System.out.println(diffInDays);
        Date selectedDate = DateOperationFrom.getDate();
        if (selectedDate == null) {
            JOptionPane.showMessageDialog(frame, "Please select a date.", "Error", JOptionPane.ERROR_MESSAGE);
//            return;
        }
        Calendar calendar = Calendar.getInstance();
        calendar.add(Calendar.WEEK_OF_YEAR, 2); // Add 3 weeks
        calendar.set(Calendar.DAY_OF_WEEK, Calendar.FRIDAY); // Set to Friday
        Date thirdWeekFriday = calendar.getTime();

        // Compare selected date with third week's Friday
        if (selectedDate.after(thirdWeekFriday)) {
            SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
            JOptionPane.showMessageDialog(frame,
                    "Operation Days  มากกว่า 3 สัปดาห์ โปรดรอจนกว่าจะอยู่ในช่วง 3 สัปดาห์ของ operation แล้วทำรายการใหม่",
                    "Alert",
                    JOptionPane.WARNING_MESSAGE);
        } else {
            System.out.println("The difference is less than 3 weeks.");
        }
        Boolean Amount = CcheckData.CheckdatainputDouble(txtamount.getText());
//        if (diffInDays >= 20) {
//            System.out.println("The difference is 20 days or more.");
//        } else {
//            System.out.println("The difference is less than 20 days.");
//        }
//         DateOperationFrom.getMonthView().setDay(true);
//        DateOperationFrom.getMonthView().setDaySelectionAllowed(true);

//        if (diffInDays > 20) {
//            System.out.println("The difference is 20 days or more.");
//            msbox("Operation Days  มากกว่า 20 วัน โปรดรอจนกว่าจะอยู่ในช่วง 20 วันของวัน operation แล้วทำรายการใหม่");
//            return false;
//        } else {
//            System.out.println("The difference is less than 20 days.");
//        }
        if (DateOperationF == false) {
            msbox("Please Check Date Operation From");
            return false;
        }

        if (DateOperationT == false) {
            msbox("Please Check Date Operation To");
            return false;
        }
//        if (diffInDays >= 20) {
//            msbox("Date given is greater than 20 days please reduce the Operation To");
//             return false;
//        }

        if (cmbstaffcode.getText().equals("")) {
            msbox("Please Check Staffcode");
            return false;
        }
        if (cmbcostcenter.getText().equalsIgnoreCase("") || cmbcostcenter.getText().equalsIgnoreCase(null)) {
            msbox("Please Check Cost center");
            return false;
        }

        if (Amount == false) {
            msbox("Please Check Amount");
            return false;
        }

        if (txtpurpose_1.getText().trim().equals("")) {
            msbox("Please Check Purpose");
            return false;
        }

        String deduct = txtpurpose_1.getText().trim();
        int countPurpose = deduct.length();
        if (countPurpose > 60) {
            msbox("Please Check Purpose1 Maximum 60 digit");
            return false;
        }

        String deduct2 = txtpurpose_2.getText().trim();
        int countPurpose2 = deduct2.length();
        if (countPurpose2 > 60) {
            msbox("Please Check Purpose2 Maximum 60 digit");
            return false;
        }

        String deduct3 = txtpurpose_3.getText().trim();
        int countPurpose3 = deduct3.length();
        if (countPurpose3 > 60) {
            msbox("Please Check Purpose3 Maximum 60 digit");
            return false;
        }

        return true;
    }

    private void radiocancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radiocancelActionPerformed
        // TODO add your handling code here:
        if (radiocancel.isSelected()) {
            radionormal.setSelected(!radiocancel.isSelected());
            radiosubmit.setSelected(!radiocancel.isSelected());
        }
    }//GEN-LAST:event_radiocancelActionPerformed

    private void radionormalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radionormalActionPerformed
        // TODO add your handling code here:
        if (radionormal.isSelected()) {
            radiosubmit.setSelected(!radionormal.isSelected());
            radiocancel.setSelected(!radionormal.isSelected());
        }
    }//GEN-LAST:event_radionormalActionPerformed

    private void radiosubmitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radiosubmitActionPerformed
        if (!txtAdvanceNo.getText().trim().equals("")) {
            if (radiosubmit.isSelected()) {
                radionormal.setSelected(!radiosubmit.isSelected());
                radiocancel.setSelected(!radiosubmit.isSelected());
            }
        } else {
            JOptionPane.showMessageDialog(null, "Please check AdvanceNo");
            radiosubmit.setSelected(false);
        }

    }//GEN-LAST:event_radiosubmitActionPerformed

    private void txtsearchStaffcodeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtsearchStaffcodeActionPerformed
        frmsearch.ProgramStep = "cashadvstep1";
        new frmsearch().setVisible(true);
    }//GEN-LAST:event_txtsearchStaffcodeActionPerformed

    private void cmbstaffcodeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbstaffcodeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cmbstaffcodeActionPerformed

    private void griddetailMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_griddetailMouseClicked

        try {
            int column = 1;
//            int row = griddetail.getSelectedRow();
//            System.out.print(griddetail.getValueAt(row, 12).toString());
//            if (Boolean.valueOf(griddetail.getValueAt(griddetail.getSelectedRow(), 12).toString()) != null) {
            Boolean isChecked = Boolean.valueOf(griddetail.getValueAt(griddetail.getSelectedRow(), 12).toString());
            if (isChecked == true) {
                ClassSetdata csr = new ClassSetdata();
                String frmAdvance = "frmAdvance";
                csr.DeleLine(frmAdvance);
                Get_DetailGrid(txtAdvanceNo1.getText().trim());
                Cal_WHTAX();
                Cal_AmountSettlementWithOutGrid();
            } else {
                msbox("" + griddetail.getValueAt(griddetail.getSelectedRow(), 0).toString());
            }
//            }
        } catch (Exception e) {

        }

    }//GEN-LAST:event_griddetailMouseClicked


    private void griddetailMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_griddetailMouseReleased
        // TODO add your handling code here:
//        SetCalculateDetailModel();
    }//GEN-LAST:event_griddetailMouseReleased
    private void SetCalculateDetailModel() {

        double TotalAmountAllReturn = 0;
        double TotalAmountReturn = 0;
        double TotalVatAmountReturn = 0;
        Classgetdata getdataDatabase = new Classgetdata();
        ClassCheckDataProgram Classcheck = new ClassCheckDataProgram();

        try {
            Date s;
            for (int i = 0; i < model.getRowCount(); ++i) {

                ////////////////////////////////////////DELETE.........................,,,,,,,,,,,,,,,,
                boolean chkdelete = false;

                try {
                    chkdelete = (boolean) model.getValueAt(i, 10);
                } catch (Exception e) {
                    chkdelete = false;
                }

                if (chkdelete) {  // FUNTION TO PRINT REPORT
                    ClassSetdata csr = new ClassSetdata();

                    String frmAdvance = "frmAdvance";
                    csr.DeleLine(frmAdvance);
                    // cgr.
                    // model.removeRow(i);

                }
            }
        } catch (Exception e) {
            // System.out.println(e.toString());
        }

    }
    private void radiosubmit1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radiosubmit1ActionPerformed
        // TODO add your handling code here:
        if (radiosubmit1.isSelected()) {
            radionormal1.setSelected(!radiosubmit1.isSelected());
        }
    }//GEN-LAST:event_radiosubmit1ActionPerformed

    private void radionormal1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radionormal1ActionPerformed
        // TODO add your handling code here:
        if (radionormal1.isSelected()) {
            radiosubmit1.setSelected(!radionormal1.isSelected());
        }
    }//GEN-LAST:event_radionormal1ActionPerformed
    private boolean CheckDataStep4ToSave() //STEP 2 CHECK
    {
        ClassCheckDataProgram CcheckData = new ClassCheckDataProgram();
        Boolean DateSettlement = CcheckData.CheckdatainputDate(DateSettlem.getDate());
        Boolean DateTransferbool = CcheckData.CheckdatainputDate(DateTransfer.getDate());
        if (DateSettlement == false) {
            msbox("Please Check Date Settlement");
            return false;
        } else if (DateTransferbool == false && modeforreceive) {
            msbox("Please Check Date Transfer");
            return false;
        }
        return true;
    }


    private void btnsave1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnsave1ActionPerformed
        // TODO add your handling code here:
        String CASH_STAT = "";
        String statussetdata;
        ClassSetdata setdata = new ClassSetdata();
        ClassCheckDataProgram cdp = new ClassCheckDataProgram();
        String CASH_STDT = "";
        String CASH_RCRA = "";
        if (CheckDataStep4ToSave() == false) {
            return;
        }
        String CASH_CANO = txtAdvanceNo1.getText().trim();
        int dialogButton = JOptionPane.YES_NO_OPTION;
        int dialogResult = JOptionPane.showConfirmDialog(null, "Would You Like to Save Cash Advance Settlement ?", "Warning",
                dialogButton);
        if (dialogResult == JOptionPane.YES_OPTION) {
            if (modeforreceive) {
                CASH_RCRA = cdp.GetDateFormatSet(DateTransfer.getDate()).trim();
            }
            CASH_STDT = cdp.GetDateFormatSet(DateSettlem.getDate()).trim();

            CASH_STAT = "40";

            if (radionormal1.isSelected() == true) {
                CASH_STAT = "40";
            }
            if (radiosubmit1.isSelected() == true) {
                CASH_STAT = "50";
            }

            String WHTAX = "0.00";
            WHTAX = txtwhtax1.getText().trim();

            String CASH_REAMT = "0.00";
            String CASH_RETOBANK = "";
            if (rdoReturnSCB.isSelected() == true) {
                CASH_REAMT = txtreturn1.getText().trim();
                CASH_RETOBANK = "SCB";
            } else if (rdoReturnKBANK.isSelected() == true) {
                CASH_REAMT = txtreturn1.getText().trim();
                CASH_RETOBANK = "KBANK";
            } else if (rdoPTC.isSelected() == true) {
                CASH_REAMT = txtrefund1.getText().trim();
                CASH_RETOBANK = "Petty Cash";
            } else if (rdoTransBank.isSelected() == true) {
                String cmbstaffcode_h = cmbSupplierADV.getText().trim();
                CASH_RETOBANK = cdp.get_SemiColonValue0(cmbstaffcode_h).trim();
                CASH_REAMT = txtrefund1.getText().trim();
            } else {
                CASH_RETOBANK = "";
                CASH_REAMT = "0.00";
            }

            model = (DefaultTableModel) griddetail.getModel();
//THIS STEP FOR CALENDER
            if (!CASH_CANO.isEmpty()) {
                CASH_CANO = setdata.SaveCashAdvanceAccountStep4Form(CASH_CANO, CASH_STDT, CASH_STAT, model, WHTAX, CASH_REAMT, CASH_RETOBANK, CASH_RCRA);
            }
        }

        if (CASH_CANO != "" && !CASH_CANO.isEmpty()) {
            if (CASH_STAT.equals("50")) {
                ClassgetReport cgr = new ClassgetReport();
                cgr.getReportAdvReq4(CASH_CANO);
                this.setVisible(false);
            }
            msboxok("Save Cash Advance Settlement Complete");
        } else {
            msboxok("Save Cash Advance Settlement Fail");
        }
    }//GEN-LAST:event_btnsave1ActionPerformed

    private void btnaddlineActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnaddlineActionPerformed
        new frmAddLineInv().setVisible(true);
    }//GEN-LAST:event_btnaddlineActionPerformed

    private void cmbSupplierADVActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbSupplierADVActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cmbSupplierADVActionPerformed

    private void txtsearchSupplier1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtsearchSupplier1ActionPerformed
        frmsearch.ProgramStep = "cashadvstep5";
        new frmsearch().setVisible(true);
        txtbranch.setText("");
        txtaccno.setText("");
        txtaccname.setText("");

    }//GEN-LAST:event_txtsearchSupplier1ActionPerformed

    private void radiotaxchecActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radiotaxchecActionPerformed
        if (radiotaxchec.isSelected()) {
            radiofrontwork.setSelected(!radiotaxchec.isSelected());
            radionontax.setSelected(!radiotaxchec.isSelected());
        }
    }//GEN-LAST:event_radiotaxchecActionPerformed

    private void radiofrontworkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radiofrontworkActionPerformed
        if (radiofrontwork.isSelected()) {
            radiotaxchec.setSelected(!radiofrontwork.isSelected());
            radionontax.setSelected(!radiofrontwork.isSelected());
        }
    }//GEN-LAST:event_radiofrontworkActionPerformed

    private void txtsearchEXPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtsearchEXPActionPerformed
        ClassCheckDataProgram CcheckData = new ClassCheckDataProgram();
        Boolean DateOperationF = CcheckData.CheckdatainputDate(DateOperationFrom.getDate());
//
//        if (DateOperationF == false) {
//            msbox("Please Check Date Operation From");
//            return;
//        } else {
        frmsearchExpense.ProgramStep = "HeadGroup";
        new frmsearchExpense().setVisible(true);
//        }


    }//GEN-LAST:event_txtsearchEXPActionPerformed

    private void txtsearchCCActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtsearchCCActionPerformed
        frmsearchCostCenter.ProgramStep = "SearchCC";
        new frmsearchCostCenter().setVisible(true);

    }//GEN-LAST:event_txtsearchCCActionPerformed

    private void DateOperationToActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DateOperationToActionPerformed

//        Date Date_sett = new Date();
//        c.setTime(DateOperationTo.getDate());
//        c.add(Calendar.DATE, 3);
//        Date_sett = c.getTime();
//        DateSettlement.setDate(DateOpeF);
    }//GEN-LAST:event_DateOperationToActionPerformed
    public class DatePickerExample {

        public void main(String[] args) {
            // Create a date picker
            JXDatePicker datePicker = new JXDatePicker();

            // Set today as the initial selected date
            Calendar calendar = Calendar.getInstance();
            datePicker.setDate(calendar.getTime());

            // Calculate the max date (20 days from today)
            Calendar maxDate = Calendar.getInstance();
            maxDate.add(Calendar.DAY_OF_YEAR, 20);

            // Restrict the selectable range
            datePicker.getMonthView().setLowerBound(calendar.getTime());
            datePicker.getMonthView().setUpperBound(maxDate.getTime());

            // Create and set up the frame
            JFrame frame = new JFrame("Date Picker Example");
            frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
            frame.setLayout(new FlowLayout());
            frame.add(datePicker);

            // Display the frame
            frame.pack();
            frame.setVisible(true);
        }
    }
    private void DateOperationFromActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DateOperationFromActionPerformed

        Date DateOpeT = new Date();
        Calendar c = Calendar.getInstance();
        c.setTime(DateOperationFrom.getDate());
        c.add(Calendar.DATE, CashAdvanRequest.Days);
        DateOpeT = c.getTime();
        DateOperationTo.setDate(DateOpeT);

        Date Date_sett = new Date();
        c.setTime(DateOperationTo.getDate());
        c.add(Calendar.DATE, 3);
        Date_sett = c.getTime();
        DateSettlement.setDate(Date_sett);
//
        Date DateOpeF = new Date();
        c.setTime(DateOperationFrom.getDate());
        c.add(Calendar.DATE, 0);
        DateOpeF = c.getTime();
        DateReceive.setDate(DateOpeF);

    }//GEN-LAST:event_DateOperationFromActionPerformed

    private void cmb_IT1GPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmb_IT1GPActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cmb_IT1GPActionPerformed

    private void rdoReturnKBANKActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rdoReturnKBANKActionPerformed
        if (rdoReturnKBANK.isSelected()) {
            rdoReturnSCB.setSelected(!rdoReturnKBANK.isSelected());
        }
    }//GEN-LAST:event_rdoReturnKBANKActionPerformed

    private void rdoReturnSCBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rdoReturnSCBActionPerformed
        if (rdoReturnSCB.isSelected() == true) {
            rdoReturnKBANK.setSelected(!rdoReturnSCB.isSelected());
            rdoPTC.setSelected(!rdoReturnSCB.isSelected());
            rdoTransBank.setSelected(!rdoReturnSCB.isSelected());
        }
    }//GEN-LAST:event_rdoReturnSCBActionPerformed

    private void btn_WHTAXStep1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_WHTAXStep1ActionPerformed

        if (txtAdvanceNo.getText().trim().equals("")) {
            msbox("Please save cash advance No.");
            txtwhtax1.setText("0.00");

        } else if (!radiofrontwork_1.isSelected()) {
            msbox("This advance not have W/H TAX");
            txtwhtax1.setText("0.00");

        } else {

            Get_DetailGrid(txtAdvanceNo1.getText().trim());

        }
    }//GEN-LAST:event_btn_WHTAXStep1ActionPerformed

    private void txtwhtax1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtwhtax1ActionPerformed
        if (txtwhtax1.getText().trim().equalsIgnoreCase("") || txtwhtax1.getText().trim().equalsIgnoreCase(null)) {
            txtwhtax1.setText("0.00");
        }
        Cal_WHTAX();
    }//GEN-LAST:event_txtwhtax1ActionPerformed

    private void btnRefundActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRefundActionPerformed
        try {
            String staffcode[] = cmbSupplierADV.getText().split(":");
            Classgetdata cgd = new Classgetdata();
            ResultSet rsl = cgd.GetDataCashAdvanRequest_BankSupp(staffcode[0]);
            if (rsl.next()) {
                txtBName.setText(rsl.getString("IDSUNM").trim());
                txtBCode.setText(rsl.getString("IRYRE1").trim());
            } else {
                msbox("Not have account code in system !");
            }
        } catch (SQLException ex) {
            Logger.getLogger(CashAdvanRequest.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnRefundActionPerformed

    private void radionontaxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radionontaxActionPerformed
        if (radionontax.isSelected()) {
            radiotaxchec.setSelected(!radionontax.isSelected());
            radiofrontwork.setSelected(!radionontax.isSelected());
        }
    }//GEN-LAST:event_radionontaxActionPerformed

    private void txtwhtax1FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtwhtax1FocusLost
        if (txtAdvanceNo.getText().trim().equals("")) {
            msbox("Please save cash advance No.");
            txtwhtax1.setText("0.00");
        } else if (!radiofrontwork_1.isSelected()) {
            msbox("This advance not have W/H TAX");
            txtwhtax1.setText("0.00");

        } else {

            Get_DetailGrid(txtAdvanceNo1.getText().trim());

        }
    }//GEN-LAST:event_txtwhtax1FocusLost

    private void radio_transferActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radio_transferActionPerformed
        if (radio_transfer.isSelected()) {
            radio_cheque.setSelected(!radionormal.isSelected());
        }
    }//GEN-LAST:event_radio_transferActionPerformed

    private void radio_chequeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radio_chequeActionPerformed
        if (radio_cheque.isSelected()) {
            radio_transfer.setSelected(!radionormal.isSelected());
        }
    }//GEN-LAST:event_radio_chequeActionPerformed

    private void DateOperationFromPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_DateOperationFromPropertyChange
        Date selectedDate = DateOperationFrom.getDate();
        JFrame frame = new JFrame("Date Picker Example");
        if (selectedDate == null) {
            JOptionPane.showMessageDialog(frame, "Please select a date.", "Error", JOptionPane.ERROR_MESSAGE);
//            return;
        }
        Calendar calendar = Calendar.getInstance();
        calendar.add(Calendar.WEEK_OF_YEAR, 2); // Add 3 weeks
        calendar.set(Calendar.DAY_OF_WEEK, Calendar.FRIDAY); // Set to Friday
        Date thirdWeekFriday = calendar.getTime();

        // Compare selected date with third week's Friday
        if (selectedDate.after(thirdWeekFriday)) {
            SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
            JOptionPane.showMessageDialog(frame,
                    "Operation Days  มากกว่า 3 สัปดาห์ โปรดรอจนกว่าจะอยู่ในช่วง 3 สัปดาห์ของ operation แล้วทำรายการใหม่",
                    "Alert",
                    JOptionPane.WARNING_MESSAGE);
            DateOperationFrom.setDate(new Date());
//             DateOperationTo.setDate(null);
//              DateOperationFrom.setDate(null);
        } else {
            System.out.println("The difference is less than 3 weeks.");
        }

    }//GEN-LAST:event_DateOperationFromPropertyChange

    private void Cal_WHTAX() {
        Double AdvAmt = Double.parseDouble(txtamount1.getText().trim());
        Double AmtBFV = Double.parseDouble(txtamtbfvat1.getText().trim());
        Double AmtVAT = Double.parseDouble(txtvat1.getText().trim());
        Double AmtWHTAX = Double.parseDouble(txtwhtax1.getText().trim());
        Double Sum = 0.00;
        ClassCheckDataProgram cgp = new ClassCheckDataProgram();
        txtreturn1.setText(String.valueOf(cgp.Double2digitReturn(Sum)).trim());
        txtrefund1.setText(String.valueOf(cgp.Double2digitReturn(Sum)).trim());
        Sum = AdvAmt - ((AmtBFV + AmtVAT) - AmtWHTAX);
        Set_RdoSettlement(false);
        if (Sum > 0.00) {
            txtreturn1.setText(String.valueOf(Sum).trim());
            rdoReturnSCB.setEnabled(true);
            rdoReturnKBANK.setEnabled(true);
            ClearBanktxt();
        } else {
            if (Sum != 0.00) {
                Sum = Sum * (-1);
            }
            txtrefund1.setText(String.valueOf(cgp.Double2digitReturn(Sum)).trim());
            if (Sum < 1000.00 && Sum != 0.00) {
                rdoPTC.setSelected(true);
                rdoPTC.setEnabled(true);
                ClearBanktxt();

            } else if (Sum >= 1000.00) {
                rdoTransBank.setSelected(true);
                rdoTransBank.setEnabled(true);
            } else {
                Set_RdoSettlement(false);
            }
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CashAdvanRequest.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CashAdvanRequest.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CashAdvanRequest.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CashAdvanRequest.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CashAdvanRequest().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    public static org.jdesktop.swingx.JXDatePicker DateOperationFrom;
    public static org.jdesktop.swingx.JXDatePicker DateOperationTo;
    private org.jdesktop.swingx.JXDatePicker DatePlanSettem;
    public static org.jdesktop.swingx.JXDatePicker DateReceive;
    private org.jdesktop.swingx.JXDatePicker DateReceive1;
    private org.jdesktop.swingx.JXDatePicker DateSettlem;
    public static org.jdesktop.swingx.JXDatePicker DateSettlement;
    public static org.jdesktop.swingx.JXDatePicker DateTransfer;
    private javax.swing.JButton btnCancel;
    private javax.swing.JButton btnRefund;
    private javax.swing.JButton btnSave;
    public static javax.swing.JButton btn_WHTAXStep1;
    private javax.swing.JButton btnaddline;
    private javax.swing.JButton btncancel1;
    private javax.swing.JButton btnsave1;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.ButtonGroup buttonGroup3;
    public static javax.swing.JTextField cmbSupplierADV;
    public static javax.swing.JTextField cmb_IT1GP;
    public static java.awt.TextField cmb_IT1GP_1;
    public static javax.swing.JTextField cmbcostcenter;
    private javax.swing.JComboBox<String> cmbcostcenter1;
    public static javax.swing.JTextField cmbstaffcode;
    private javax.swing.JComboBox<String> cmbstaffcode1;
    public static javax.swing.JTable griddetail;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    public static javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel35;
    private javax.swing.JLabel jLabel36;
    private javax.swing.JLabel jLabel37;
    private javax.swing.JLabel jLabel38;
    private javax.swing.JLabel jLabel39;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel40;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTabbedPane jTabbedPane1;
    private java.awt.Label label17;
    private java.awt.Label lblCompanyName;
    private javax.swing.JRadioButton radio_cheque;
    private javax.swing.JRadioButton radio_transfer;
    private javax.swing.JRadioButton radiocancel;
    public static javax.swing.JRadioButton radiofrontwork;
    public static javax.swing.JRadioButton radiofrontwork_1;
    public static javax.swing.JRadioButton radionontax;
    public static javax.swing.JRadioButton radionontax_1;
    private javax.swing.JRadioButton radionormal;
    private javax.swing.JRadioButton radionormal1;
    private javax.swing.JRadioButton radiosubmit;
    private javax.swing.JRadioButton radiosubmit1;
    public static javax.swing.JRadioButton radiotaxchec;
    public static javax.swing.JRadioButton radiotaxchec_1;
    public static javax.swing.JRadioButton rdoPTC;
    public static javax.swing.JRadioButton rdoReturnKBANK;
    public static javax.swing.JRadioButton rdoReturnSCB;
    public static javax.swing.JRadioButton rdoTransBank;
    public static java.awt.TextField txtAdvanceNo;
    public static java.awt.TextField txtAdvanceNo1;
    public static javax.swing.JTextField txtBCode;
    public static javax.swing.JTextField txtBName;
    private java.awt.TextField txtDateAdvance;
    private java.awt.TextField txtDateAdvance1;
    private java.awt.TextField txtPONO;
    private java.awt.TextField txtReccorder;
    private java.awt.TextField txtRefPo;
    public static javax.swing.JTextField txtaccname;
    public static javax.swing.JTextField txtaccno;
    public static javax.swing.JTextField txtamount;
    public static javax.swing.JTextField txtamount1;
    public static javax.swing.JTextField txtamt1;
    public static javax.swing.JTextField txtamtbfvat1;
    public static javax.swing.JTextField txtbranch;
    private java.awt.TextField txtpurpose1_1;
    private java.awt.TextField txtpurpose1_2;
    private java.awt.TextField txtpurpose1_3;
    private javax.swing.JTextField txtpurpose_1;
    private javax.swing.JTextField txtpurpose_2;
    private javax.swing.JTextField txtpurpose_3;
    public static javax.swing.JTextField txtrefund1;
    public static javax.swing.JTextField txtreturn1;
    private javax.swing.JButton txtsearchCC;
    private javax.swing.JButton txtsearchEXP;
    private javax.swing.JButton txtsearchStaffcode;
    private javax.swing.JButton txtsearchSupplier1;
    public static javax.swing.JTextField txtvat1;
    public static javax.swing.JTextField txtwhtax1;
    // End of variables declaration//GEN-END:variables
}
