/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package cashadvance_multicompany;

import static cashadvance_multicompany.CashAdvanRequest.DateOperationFrom;
import static cashadvance_multicompany.CashAdvanRequest.DateOperationTo;
import static cashadvance_multicompany.CashAdvanRequest.DateReceive;
import static cashadvance_multicompany.CashAdvanRequest.DateSettlement;
import static cashadvance_multicompany.CashAdvanRequest.cmb_IT1GP;

import java.sql.ResultSet;

import javax.swing.table.DefaultTableModel;

import java.util.Calendar;
import java.util.Date;

/**
 *
 * @author Monthon
 */
public class frmsearchExpense extends javax.swing.JFrame {

    public static DefaultTableModel model;
    public static String ProgramStep = "";

    /**
     * Creates new form frmsearch
     */
    public frmsearchExpense() {
        initComponents();
        GetExpenseGroup();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTableSearch = new javax.swing.JTable();
        txtsearch = new javax.swing.JTextField();
        btnSearchsupp = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        getContentPane().setLayout(null);

        jTableSearch.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "No", "Description", "Date"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTableSearch.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTableSearchMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTableSearch);
        if (jTableSearch.getColumnModel().getColumnCount() > 0) {
            jTableSearch.getColumnModel().getColumn(0).setMinWidth(50);
            jTableSearch.getColumnModel().getColumn(0).setMaxWidth(50);
            jTableSearch.getColumnModel().getColumn(2).setMinWidth(90);
            jTableSearch.getColumnModel().getColumn(2).setPreferredWidth(90);
            jTableSearch.getColumnModel().getColumn(2).setMaxWidth(90);
        }

        getContentPane().add(jScrollPane1);
        jScrollPane1.setBounds(40, 120, 480, 260);
        getContentPane().add(txtsearch);
        txtsearch.setBounds(100, 40, 229, 31);

        btnSearchsupp.setText("Search");
        btnSearchsupp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchsuppActionPerformed(evt);
            }
        });
        getContentPane().add(btnSearchsupp);
        btnSearchsupp.setBounds(330, 40, 90, 31);

        jLabel1.setText("Group :");
        getContentPane().add(jLabel1);
        jLabel1.setBounds(40, 40, 60, 31);

        jButton1.setText("Back");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1);
        jButton1.setBounds(460, 90, 55, 28);

        setSize(new java.awt.Dimension(582, 443));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnSearchsuppActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchsuppActionPerformed

//        GetSupplier(txtsearch.getText().trim());
    }//GEN-LAST:event_btnSearchsuppActionPerformed

    private void jTableSearchMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableSearchMouseClicked
        // get the model from the jtable

//        if (ProgramStep.equals("cashadvstep2")) {
//            DefaultTableModel model = (DefaultTableModel) jTableSearch.getModel();
//
//            // get the selected row index
//            int selectedRowIndex = jTableSearch.getSelectedRow();
//
//            // set the selected row data into jtextfields
//////            txtsupline.setText(model.getValueAt(selectedRowIndex, 0).toString());
//            ////   txtname.setText(model.getValueAt(selectedRowIndex, 1).toString());
//            dispose();
//        } else if (ProgramStep.equals("cashadvstep1")) {
//
//            DefaultTableModel model = (DefaultTableModel) jTableSearch.getModel();
//
//            // get the selected row index
//            int selectedRowIndex = jTableSearch.getSelectedRow();
//
//            // set the selected row data into jtextfields
//            String C = (model.getValueAt(selectedRowIndex, 0).toString());
//            String N = (model.getValueAt(selectedRowIndex, 1).toString());
//            cmbstaffcode.setText(C + " : " + N);
//
//            dispose();
//        } else
//            if (ProgramStep.equals("HeadGroup")) {
        DefaultTableModel model = (DefaultTableModel) jTableSearch.getModel();

        // get the selected row index
        int selectedRowIndex = jTableSearch.getSelectedRow();

        // set the selected row data into jtextfields
        String C = (model.getValueAt(selectedRowIndex, 0).toString());
        String N = (model.getValueAt(selectedRowIndex, 1).toString());

        if (C.length() > 1) {
            cmb_IT1GP.setText(C + " : " + N);
            CashAdvanRequest.Days = Integer.parseInt((model.getValueAt(selectedRowIndex, 2).toString()));
            System.out.println(CashAdvanRequest.Days);

            Date DateOpeT = new Date();

            Calendar c = Calendar.getInstance();
            c.setTime(DateOperationFrom.getDate());
            c.add(Calendar.DATE, CashAdvanRequest.Days);
            DateOpeT = c.getTime();
            DateOperationTo.setDate(DateOpeT);

            Date Date_sett = new Date();
            c.setTime(DateOperationTo.getDate());
            c.add(Calendar.DATE, 3);
            Date_sett = c.getTime();
            DateSettlement.setDate(Date_sett);

            Date DateOpeF = new Date();
            c.setTime(DateOperationTo.getDate());
            c.add(Calendar.DATE, -2);
            DateOpeF = c.getTime();
            DateReceive.setDate(DateOpeF);
            dispose();

        } else {
            GetExpenseSubGroup(C);
        }
//            if (C.equals("9")) {
//                Date DateOpeT = new Date();
//
//                Calendar c = Calendar.getInstance();
//                c.setTime(DateOperationFrom.getDate());
//                c.add(Calendar.DATE, 90);
//                DateOpeT = c.getTime();
//                DateOperationTo.setDate(DateOpeT);
//
//                Date Date_sett = new Date();
//                c.setTime(DateOperationTo.getDate());
//                c.add(Calendar.DATE, 3);
//                Date_sett = c.getTime();
//                DateSettlement.setDate(Date_sett);
//
//                Date DateOpeF = new Date();
//                c.setTime(DateOperationTo.getDate());
//                c.add(Calendar.DATE, -2);
//                DateOpeF = c.getTime();
//                DateReceive.setDate(DateOpeF);
//            } else {
//                Date DateOpeT = new Date();
//
//                Calendar c = Calendar.getInstance();
//                c.setTime(DateOperationFrom.getDate());
//                c.add(Calendar.DATE, 15);
//                DateOpeT = c.getTime();
//                DateOperationTo.setDate(DateOpeT);
//
//                Date Date_sett = new Date();
//                c.setTime(DateOperationTo.getDate());
//                c.add(Calendar.DATE, 3);
//                Date_sett = c.getTime();
//                DateSettlement.setDate(Date_sett);
//
//                Date DateOpeF = new Date();
//                c.setTime(DateOperationTo.getDate());
//                c.add(Calendar.DATE, -2);
//                DateOpeF = c.getTime();
//                DateReceive.setDate(DateOpeF);
//            }
//            try {
//                String suppcode[] = cmbSupplierADV.getText().split(":");
//                Classgetdata cgd = new Classgetdata();
//                ResultSet rsl = cgd.GetDataCashAdvanRequest_BankSupp(suppcode[0]);
//
//                while (rsl.next()) {
//                    txtbranch.setText(rsl.getString("IRTFNO"));
//                    txtaccno.setText(rsl.getString("IRSUCM"));
//                    txtaccname.setText(rsl.getString("IRYRE1"));
//                }
//
//            } catch (SQLException ex) {
//                Logger.getLogger(CashAdvanRequest.class.getName()).log(Level.SEVERE, null, ex);
//                System.err.println(ex.toString());
//            }
//            dispose();
//        }


    }//GEN-LAST:event_jTableSearchMouseClicked

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        GetExpenseGroup();
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(frmsearchExpense.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(frmsearchExpense.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(frmsearchExpense.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(frmsearchExpense.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new frmsearchExpense().setVisible(true);
            }
        });
    }
//
//    public void GetSupplier(String searchlike) {
//
//        SetModel();
//        Classgetdata cgr = new Classgetdata();
//        ResultSet rs1 = cgr.GetSupplierResultwithsearchData(searchlike);
//
//        try {
//            while (rs1.next()) {
//
//                model.insertRow(model.getRowCount(), new Object[]{
//                    rs1.getString("idsuno").trim(), rs1.getString("idsunm").trim()
//
//                });
//
//            }
//        } catch (Exception e) {
//        }
//
//    }

    public void GetExpenseGroup() {

        SetModel();
        Classgetdata cgr = new Classgetdata();
        ResultSet rs1 = cgr.GetExpensHeadGroup();

        try {
            while (rs1.next()) {

                model.insertRow(model.getRowCount(), new Object[]{
                    rs1.getString("I1GP_NOGP").trim(), rs1.getString("I1GP_DESGP").trim()

                });

            }
        } catch (Exception e) {
        }

    }

    public void GetExpenseSubGroup(String SubGroup) {

        SetModel();
        Classgetdata cgr = new Classgetdata();
        ResultSet rs1 = cgr.GetExpensSubGroup(SubGroup);

        try {
            while (rs1.next()) {

                model.insertRow(model.getRowCount(), new Object[]{
                    rs1.getString("I2SG_NOSG").trim(), rs1.getString("I2SG_DESSG").trim(), rs1.getString("I2SG_DATE").trim()

                });

            }
        } catch (Exception e) {
        }

    }

    private void SetModel() {

        try {
            model = (DefaultTableModel) jTableSearch.getModel();
            while (model.getRowCount() > 0) {
                for (int i = 0; i < model.getRowCount(); ++i) {
                    model.removeRow(i);

                }
            }

        } catch (Exception ex) {
            // Logger.getLogger(viewdata.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    public static javax.swing.JButton btnSearchsupp;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    public static javax.swing.JTable jTableSearch;
    private javax.swing.JTextField txtsearch;
    // End of variables declaration//GEN-END:variables
}
